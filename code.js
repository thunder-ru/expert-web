// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏
function scrollToSection(id) {
  document.getElementById(id).scrollIntoView({ behavior: "smooth" });
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ Telegram
function openTelegram() {
  window.open("https://t.me/overgrand", '_blank');
}

// –ü–æ–∫–∞–∑–∞—Ç—å —à–∞–≥
function showStep(n) {
  document.querySelectorAll('.step').forEach(step => step.classList.remove('active'));
  const step = document.getElementById(`step${n}`);
  if (step) {
    step.classList.add('active');
    updateProgress();
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
function updateProgress() {
  const step = Array.from(document.querySelectorAll('.step')).findIndex(s => s.classList.contains('active')) + 1;
  const progress = (step / 4) * 100;
  document.getElementById('progressFill').style.width = `${progress}%`;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±–æ—Ä–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥
function validateAndNext(currentStep, nextStepNum) {
  let valid = true;
  if (currentStep === 1 && !document.querySelector('input[name="siteType"]:checked')) valid = false;
  else if (currentStep === 2 && !document.querySelector('input[name="design"]:checked')) valid = false;
  else if (currentStep === 3 && !document.querySelector('input[name="seo"]:checked')) valid = false;
  else if (currentStep === 4 && !document.querySelector('input[name="support"]:checked')) valid = false;

  if (!valid) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç.");
    return;
  }
  showStep(nextStepNum);
  updateTotal();
}

// –ù–∞–∑–∞–¥
function goBack() {
  for (let i = 2; i <= 4; i++) {
    const step = document.getElementById(`step${i}`);
    if (step && step.classList.contains('active')) {
      showStep(i - 1);
      return;
    }
  }
  showStep(1);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–∞
function updateTotal() {
  let total = 0;
  const siteType = document.querySelector('input[name="siteType"]:checked');
  if (siteType) total += parseFloat(siteType.value) || 0;
  const design = document.querySelector('input[name="design"]:checked');
  if (design) total += parseFloat(design.value) || 0;
  const seo = document.querySelector('input[name="seo"]:checked');
  if (seo) total += parseFloat(seo.value) || 0;
  const support = document.querySelector('input[name="support"]:checked');
  if (support) total += parseFloat(support.value) || 0;

  const resultEl = document.getElementById('result');
  if (resultEl) {
    resultEl.innerHTML = `
      <strong>–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${total.toLocaleString()}&nbsp;‚ÇΩ</strong>
      <br>
      <small style="color: #94a3b8;">–¢–æ—á–Ω–∞—è —Ü–µ–Ω–∞ –±—É–¥–µ—Ç –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞</small>
    `;
  }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
function openCalculator() {
  const modal = document.getElementById('calculatorModal');
  modal.style.display = 'flex';
  setTimeout(() => modal.classList.add('show'), 50);
  showStep(1);
  updateTotal();
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
function closeCalculator() {
  const modal = document.getElementById('calculatorModal');
  modal.classList.remove('show');
  setTimeout(() => {
    modal.style.display = 'none';
  }, 300);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏
function requestQuote() {
  const siteTypeLabel = document.querySelector('input[name="siteType"]:checked')?.nextElementSibling?.querySelector('h4')?.innerText || '‚Äî';
  const designLabel = document.querySelector('input[name="design"]:checked')?.nextElementSibling?.querySelector('h4')?.innerText || '‚Äî';
  const seoLabel = document.querySelector('input[name="seo"]:checked')?.value > 0 ? '–î–∞' : '–ù–µ—Ç';
  const supportLabel = document.querySelector('input[name="support"]:checked')?.nextElementSibling?.querySelector('h4')?.innerText || '‚Äî';
  const totalEl = document.getElementById('result').querySelector('strong');
  const total = totalEl ? totalEl.innerText.match(/\d+/)?.[0] : '0';

  let message = `üöÄ *–ó–ê–Ø–í–ö–ê –ù–ê –°–ú–ï–¢–£*\n\n`;
  message += `üîπ –¢–∏–ø —Å–∞–π—Ç–∞: ${siteTypeLabel}\n`;
  message += `üîπ –î–∏–∑–∞–π–Ω: ${designLabel}\n`;
  message += `üîπ SEO: ${seoLabel}\n`;
  message += `üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: ${supportLabel}\n\n`;
  message += `üí∞ –ò—Ç–æ–≥–æ: ${total} ‚ÇΩ\n\n`;
  message += `‚Äî\n–ì–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏!`;

  const encoded = encodeURIComponent(message);
  const url = `https://t.me/overgrand?text=${encoded}`;
  window.open(url, '_blank');
}

// –ì–∞–ª–µ—Ä–µ—è ‚Äî –≤—Å–µ URL –æ—á–∏—â–µ–Ω—ã
const galleryData = {
  auto: {
    title: "–ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π",
    desc: "–°–∞–π—Ç –¥–ª—è –∞—Ä–µ–Ω–¥—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å –æ–Ω–ª–∞–π–Ω-–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º.",
    result: "+30% –∑–∞—è–≤–æ–∫ –∑–∞ 2 –º–µ—Å—è—Ü–∞",
    images: [
      "https://i.postimg.cc/pdkWMT84/Black1.jpg",
      "https://i.postimg.cc/tR8BKPyZ/Blakc2.jpg",
      "https://i.postimg.cc/PrmQ0R29/Black3.jpg",
      "https://i.postimg.cc/0yndyJgC/Black4.jpg",
      "https://i.postimg.cc/HnbbDr4X/Black-5.jpg"
    ]
  },
  dentist: {
    title: "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è",
    desc: "–°–∞–π—Ç-–≤–∏–∑–∏—Ç–∫–∞ —Å –∑–∞–ø–∏—Å—å—é –Ω–∞ –ø—Ä–∏—ë–º –∏ –æ—Ç–∑—ã–≤–∞–º–∏.",
    result: "–¢–û–ü-5 –≤ –Ø–Ω–¥–µ–∫—Å –ø–æ –∫–ª—é—á–µ–≤—ã–º –∑–∞–ø—Ä–æ—Å–∞–º",
    images: [
      "https://i.postimg.cc/GmFkPfSL/1.jpg",
      "https://i.postimg.cc/5tgJdxjX/2.jpg",
      "https://i.postimg.cc/D0J3XL6G/3.jpg",
      "https://i.postimg.cc/8k9SVXkm/4.jpg",
      "https://i.postimg.cc/zf0s20PW/6.jpg",
      "https://i.postimg.cc/g2dcft4B/7.jpg",
      "https://i.postimg.cc/vm2QxYyp/8.jpg",
      "https://i.postimg.cc/DfX2m3MM/9.jpg"
    ]
  },
  tea: {
    title: "–û–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω —á–∞—è –∏ –∫–æ—Ñ–µ",
    desc: "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –∏ –∫–æ—Ä–∑–∏–Ω–æ–π.",
    result: "–û–∫—É–ø–∏–ª—Å—è –∑–∞ 1.5 –Ω–µ–¥–µ–ª–∏",
    images: [
      "https://i.postimg.cc/xC4HTVqR/1.jpg",
      "https://i.postimg.cc/GmSbdtS8/2.jpg",
      "https://i.postimg.cc/tCTfyk0k/3.jpg",
      "https://i.postimg.cc/MpfFfGpj/4.jpg",
      "https://i.postimg.cc/d08NnSds/5.jpg",
      "https://i.postimg.cc/nz2Rfj0N/6.jpg",
      "https://i.postimg.cc/zf10LSQ9/7.jpg"
    ]
  },
  bike: {
    title: "–ú–∞–≥–∞–∑–∏–Ω –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤",
    desc: "–°–∞–π—Ç —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º, —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ –æ–ø–ª–∞—Ç–æ–π.",
    result: "+30% —Ç—Ä–∞—Ñ–∏–∫–∞ –∏ 20+ –∑–∞–∫–∞–∑–æ–≤ –≤ –º–µ—Å—è—Ü",
    images: [
      "https://i.postimg.cc/J7S6P9KZ/image.jpg",
      "https://i.postimg.cc/MG02XYWL/2.jpg",
      "https://i.postimg.cc/zfr4mRnF/3.jpg",
      "https://i.postimg.cc/dQxXsf21/4.jpg",
      "https://i.postimg.cc/rFRHK9j9/5.jpg",
      "https://i.postimg.cc/wjKGJsbY/6.jpg",
      "https://i.postimg.cc/DwqYcytJ/7.jpg"
    ]
  },
  fitness: {
    title: "–§–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä",
    desc: "–°–∞–π—Ç –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞",
    result: "12+ –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ –º–µ—Å—è—Ü",
    images: [
      "https://i.postimg.cc/Z5xwY0mx/1.jpg",
      "https://i.postimg.cc/907v5PN1/2.jpg",
      "https://i.postimg.cc/vH5p0znZ/3.jpg",
      "https://i.postimg.cc/bwT4hw3X/image.jpg",
      "https://i.postimg.cc/26PKwb8W/5.jpg"
    ]
  },
  travel: {
    title: "–¢—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–æ",
    desc: "–°–∞–π—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É—Ä–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ –æ–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–æ–π.",
    result: "–£–¥–æ–±–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–æ–≤ –æ–Ω–ª–∞–π–Ω",
    images: [
      "https://i.postimg.cc/8kvBPsBf/1.jpg",
      "https://i.postimg.cc/zG02QPG8/2.jpg",
      "https://i.postimg.cc/xdB5DrDD/3.jpg",
      "https://i.postimg.cc/9FcpjtSM/4.jpg",
      "https://i.postimg.cc/bwBHkXvD/5.jpg",
      "https://i.postimg.cc/MGf0Yscs/6.jpg"
    ]
  }
};

// –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏
function openGallery(projectId) {
  const data = galleryData[projectId];
  if (!data) {
    console.error("–ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:", projectId);
    return;
  }

  document.getElementById('projectTitle').innerText = data.title;
  document.getElementById('projectDesc').innerText = data.desc;
  document.getElementById('projectResult').innerText = data.result;

  const galleryGrid = document.getElementById('galleryGrid');
  galleryGrid.innerHTML = '';

  data.images.forEach(imgUrl => {
    const img = document.createElement('img');
    img.src = imgUrl.trim();
    img.alt = data.title;
    img.onerror = () => {
      img.src = "https://via.placeholder.com/800x500/333/fff?text=–û—à–∏–±–∫–∞+–∑–∞–≥—Ä—É–∑–∫–∏";
    };
    galleryGrid.appendChild(img);
  });

  const modal = document.getElementById('galleryModal');
  modal.style.display = 'flex';
  setTimeout(() => modal.classList.add('show'), 50);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –≥–∞–ª–µ—Ä–µ–∏
function closeGallery() {
  const modal = document.getElementById('galleryModal');
  modal.classList.remove('show');
  setTimeout(() => {
    modal.style.display = 'none';
  }, 300);
}

// –ù–∞–≤–µ–¥–µ–Ω–∏–µ
let hoverTimeout;
function openGalleryOnHover(projectId) {
  hoverTimeout = setTimeout(() => {
    openGallery(projectId);
  }, 800);
}
function closeGalleryOnHover() {
  clearTimeout(hoverTimeout);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape') closeGallery();
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ
document.getElementById('galleryModal').addEventListener('click', (e) => {
  if (e.target === e.currentTarget) closeGallery();
});

// –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
function toggleMenu() {
  document.getElementById("mainNav").classList.toggle("active");
}

// –§–æ—Ä–º–∞
document.getElementById('contactForm').addEventListener('submit', function(e) {
  e.preventDefault();
  const name = document.getElementById('name').value.trim();
  const phone = document.getElementById('phone').value.trim();
  const email = document.getElementById('email').value.trim();

  if (!name || !phone || !email) {
    alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.');
    return;
  }

  const message = document.getElementById('message').value.trim();
  let text = `üì© *–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê*\n\n`;
  text += `üë§ –ò–º—è: ${name}\n`;
  text += `üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n`;
  text += `‚úâÔ∏è Email: ${email}\n`;
  if (message) text += `üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}\n`;
  text += `\n‚Äî\n–ì–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É!`;

  const encoded = encodeURIComponent(text);
  window.open(`https://t.me/overgrand?text=${encoded}`, '_blank');
  alert('‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
  this.reset();
});

// –°–ª–∞–π–¥–µ—Ä –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
let currentSlide = 0;
const slides = document.querySelectorAll('.slide');
const dots = document.querySelectorAll('.dot');
const nextBtn = document.getElementById('nextSlide');
const prevBtn = document.getElementById('prevSlide');

function showSlide(n) {
  if (n >= slides.length) currentSlide = 0;
  if (n < 0) currentSlide = slides.length - 1;
  slides.forEach(s => s.classList.remove('active'));
  dots.forEach(d => d.classList.remove('active'));
  slides[currentSlide].classList.add('active');
  dots[currentSlide].classList.add('active');
}

function nextSlide() { currentSlide++; showSlide(currentSlide); }
function prevSlide() { currentSlide--; showSlide(currentSlide); }
function goToSlide(n) { currentSlide = n; showSlide(currentSlide); }

let slideInterval = setInterval(nextSlide, 5000);

document.querySelector('.portfolio-slider').addEventListener('mouseenter', () => clearInterval(slideInterval));
document.querySelector('.portfolio-slider').addEventListener('mouseleave', () => {
  slideInterval = setInterval(nextSlide, 5000);
});

if (nextBtn) nextBtn.addEventListener('click', () => { clearInterval(slideInterval); nextSlide(); });
if (prevBtn) prevBtn.addEventListener('click', () => { clearInterval(slideInterval); prevSlide(); });
dots.forEach((dot, i) => {
  dot.addEventListener('click', () => { clearInterval(slideInterval); goToSlide(i); });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener("DOMContentLoaded", () => {
  if (slides.length > 0) showSlide(0);
});
